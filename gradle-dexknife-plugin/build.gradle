buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.3"
    }
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'com.jfrog.bintray'

repositories {
    jcenter()
}

configurations {
    provided {
        dependencies.all { dep ->
            configurations.default.exclude group: dep.group, module: dep.name
        }
    }
    compile.extendsFrom provided
}

compileGroovy {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
    options.encoding = "UTF-8"
}

//sourceSets {
//    main {
//        compileClasspath += configurations.provided
////        runtimeClasspath += configurations.provided
//    }
//}

dependencies {
    compile gradleApi()
    compile localGroovy()
    provided 'com.android.tools.build:builder:2.1.3'
    provided 'com.android.tools.build:gradle-core:2.1.3'
}

version = "${PUBLIC_VERSION}"
group = 'com.ceabie.dextools'

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "ceabie"
            name "ceabie"
            email "ceabie@gmail.com"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'A simple android gradle plugin to use the wildcards of package to smart split the specified classes to second dex.')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = bintrayUser
    key = bintrayApiKey

    publications = ['mavenJava']
    pkg {
        repo = 'gradle-plugins'
        name = 'gradle-dexknife-plugin'
        labels = ['gradle', 'plugin', 'dex', 'split sex', 'multidex']
        websiteUrl = POM_URL
        vcsUrl = POM_URL + '.git'
        issueTrackerUrl = POM_URL + '/issues'
        licenses = ["Apache-2.0"]
        version {
            name = "${PUBLIC_VERSION}"
            attributes = ['gradle-plugin': 'com.ceabie.dextools:gradle-dexknife-plugin']
        }
    }
    publish = true
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

task wrapper(type: Wrapper, description: 'Gradle Wrapper task') {
    gradleVersion = '2.8'
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('../repo'))
            pom.version = "${DEV_VERSION}"
            pom.artifactId = "gradle-dexknife-plugin"
            pom.groupId = "com.ceabie.dextools"
        }
    }
}